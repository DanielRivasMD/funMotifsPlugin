////////////////////////////////////////////////////////////////////////////////////////////////////

// set compiler lints
#![allow(unused_imports)]
#![allow(unused_variables)]

////////////////////////////////////////////////////////////////////////////////////////////////////

// fun motifs plugin wrapper
use fun_motifs_plugin::*;

////////////////////////////////////////////////////////////////////////////////////////////////////

// standard libraries
use anyhow::Result as anyResult;

////////////////////////////////////////////////////////////////////////////////////////////////////

// crate utilities
use crate::utils::{
  collector::collect_str, help::cli_fun_motifs_plugin, reader::line_counter,
};

////////////////////////////////////////////////////////////////////////////////////////////////////

fn main() -> anyResult<()> {
  // collect command line arguments
  let params = collect_str(cli_fun_motifs_plugin().get_matches())?;

  // count lines
  let count = line_counter(&params.input)?;

  // log result
  println!("{}", count);

  Ok(())
}

////////////////////////////////////////////////////////////////////////////////////////////////////
