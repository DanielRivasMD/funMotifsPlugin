////////////////////////////////////////////////////////////////////////////////////////////////////
// macros
////////////////////////////////////////////////////////////////////////////////////////////////////

// derive new
#[macro_use]
extern crate derive_new;

////////////////////////////////////////////////////////////////////////////////////////////////////

// standard libraries
use anyhow::Result as anyResult;

////////////////////////////////////////////////////////////////////////////////////////////////////

// modules
pub mod structures;
pub mod utils;

////////////////////////////////////////////////////////////////////////////////////////////////////

// crate utilities
use crate::utils::{collector::collect_str, help::cli_fun_motifs_plugin};

////////////////////////////////////////////////////////////////////////////////////////////////////

fn main() -> anyResult<()> {
  // collect command line arguments
  let params = collect_str(cli_fun_motifs_plugin().get_matches())?;

  Ok(())
}

////////////////////////////////////////////////////////////////////////////////////////////////////
